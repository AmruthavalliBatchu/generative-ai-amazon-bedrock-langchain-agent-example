{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2023-04-20",
    "endpointPrefix":"bedrock",
    "jsonVersion":"1.1",
    "protocol":"rest-json",
    "serviceFullName":"Amazon Bedrock",
    "serviceId":"bedrock",
    "signatureVersion":"v4",
    "signingName":"bedrock",
    "uid":"bedrock-2023-04-20"
  },
  "operations":{
    "InvokeModel":{
      "name":"InvokeModel",
      "http":{
        "method":"POST",
        "requestUri":"/model/{modelId}/invoke",
        "responseCode":200
      },
      "input":{"shape":"InvokeModelRequest"},
      "output":{"shape":"InvokeModelResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"ResourceNotFoundException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"ValidationException"},
        {"shape":"ModelNotReadyException"},
        {"shape":"ServiceQuotaExceededException"},
        {"shape":"ModelErrorException"}
      ],
      "documentation":"<p>Invokes the specified Bedrock model to run inference using the input provided in the request body.</p>"
    },
    "ListFoundationModels":{
      "name":"ListFoundationModels",
      "http":{
        "method":"GET",
        "requestUri":"/foundation-models",
        "responseCode":200
      },
      "input":{"shape":"ListFoundationModelsRequest"},
      "output":{"shape":"ListFoundationModelsResponse"},
      "errors":[
        {"shape":"AccessDeniedException"},
        {"shape":"ThrottlingException"},
        {"shape":"InternalServerException"},
        {"shape":"ValidationException"}
      ],
      "documentation":"<p>List of Bedrock foundation models that you can use.</p>"
    }
  },
  "shapes":{
    "AccessDeniedException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when a request is denied per access permissions</p>",
      "error":{
        "httpStatusCode":403,
        "senderFault":true
      },
      "exception":true
    },
    "BedrockModelArn":{
      "type":"string",
      "documentation":"<p>ModelArn of a Bedrock model. This ARN can be used in IAM resource policies</p>",
      "pattern":"arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]{1,20}:([0-9]{12}|):(custom|foundation)-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(/[a-z0-9]{12}|)"
    },
    "BedrockModelId":{
      "type":"string",
      "documentation":"<p>Identifier of the model</p>",
      "pattern":"[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(/[a-z0-9]{12}|)"
    },
    "Body":{
      "type":"blob",
      "documentation":"<p>Model input and output as a binary large object</p>",
      "max":25000000,
      "min":0,
      "sensitive":true
    },
    "FoundationModelSummary":{
      "type":"structure",
      "required":[
        "modelArn",
        "modelId"
      ],
      "members":{
        "modelArn":{"shape":"BedrockModelArn"},
        "modelId":{"shape":"BedrockModelId"}
      },
      "documentation":"<p>Summary of a foundation model</p>"
    },
    "FoundationModelSummaryList":{
      "type":"list",
      "member":{"shape":"FoundationModelSummary"},
      "documentation":"<p>List of bedrock foundation models</p>"
    },
    "InternalServerException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown if there was an unexpected error during processing of request</p>",
      "error":{"httpStatusCode":500},
      "exception":true,
      "fault":true
    },
    "InvokeModelRequest":{
      "type":"structure",
      "required":[
        "body",
        "modelId"
      ],
      "members":{
        "body":{
          "shape":"Body",
          "documentation":"<p>Input data in the format specified in the Content-Type request header.</p>"
        },
        "contentType":{
          "shape":"MimeType",
          "documentation":"<p>The MIME type of the input data in the request body.</p>",
          "location":"header",
          "locationName":"Content-Type"
        },
        "accept":{
          "shape":"MimeType",
          "documentation":"<p>The desired MIME type of the inference body in the response.</p>",
          "location":"header",
          "locationName":"Accept"
        },
        "modelId":{
          "shape":"BedrockModelId",
          "location":"uri",
          "locationName":"modelId"
        }
      },
      "documentation":"<p>InvokeModel Request</p>",
      "payload":"body"
    },
    "InvokeModelResponse":{
      "type":"structure",
      "required":["body"],
      "members":{
        "body":{
          "shape":"Body",
          "documentation":"<p>Inference response from the model in the format specified in the Content-Type response header.</p>"
        },
        "contentType":{
          "shape":"MimeType",
          "documentation":"<p>The MIME type of the inference returned in the response body.</p>",
          "location":"header",
          "locationName":"Content-Type"
        }
      },
      "documentation":"<p>InvokeModel Response</p>",
      "payload":"body"
    },
    "ListFoundationModelsRequest":{
      "type":"structure",
      "members":{
        "byProvider":{
          "shape":"Provider",
          "location":"querystring",
          "locationName":"byProvider"
        }
      },
      "documentation":"<p>ListFoundationModels Request</p>"
    },
    "ListFoundationModelsResponse":{
      "type":"structure",
      "members":{
        "modelSummaries":{"shape":"FoundationModelSummaryList"}
      },
      "documentation":"<p>ListFoundationModels Response</p>"
    },
    "MimeType":{
      "type":"string",
      "documentation":"<p>Content type of the request</p>"
    },
    "ModelErrorException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"},
        "originalStatusCode":{"shape":"StatusCode"},
        "resourceName":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when a request fails in the model container</p>",
      "error":{
        "httpStatusCode":424,
        "senderFault":true
      },
      "exception":true
    },
    "ModelNotReadyException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when the ML model is not ready to serve inference requests</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true
    },
    "NonBlankString":{
      "type":"string",
      "documentation":"<p>Non Blank String</p>",
      "pattern":"[\\s\\S]*"
    },
    "Provider":{
      "type":"string",
      "documentation":"<p>A model provider of Bedrock</p>",
      "pattern":"[a-z0-9-]{1,63}"
    },
    "ResourceNotFoundException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when a resource referenced by the operation does not exist</p>",
      "error":{
        "httpStatusCode":404,
        "senderFault":true
      },
      "exception":true
    },
    "ServiceQuotaExceededException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when a request is made beyond the service quota</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    },
    "StatusCode":{
      "type":"integer",
      "documentation":"<p>Status Code</p>",
      "box":true,
      "max":599,
      "min":100
    },
    "ThrottlingException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when the number of requests exceeds the limit</p>",
      "error":{
        "httpStatusCode":429,
        "senderFault":true
      },
      "exception":true
    },
    "ValidationException":{
      "type":"structure",
      "members":{
        "message":{"shape":"NonBlankString"}
      },
      "documentation":"<p>This exception is thrown when the request's input validation fails</p>",
      "error":{
        "httpStatusCode":400,
        "senderFault":true
      },
      "exception":true
    }
  },
  "documentation":"<p>Amazon Bedrock</p>"
}
